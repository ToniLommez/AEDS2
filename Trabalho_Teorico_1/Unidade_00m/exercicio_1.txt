Faça o quadro de memória e mostre a saída na tela:
----------------------------
int *x1; int x2; int *x3;
x1 = (int *) malloc (sizeof(int));
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
*x1 = 20;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
x2 = *x1;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
*x3 = x2 * *x1;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
x3 = &x2;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
x2 = 15;
printf(“\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)”, x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
----------------------------

No codigo proposto a variavel x3 nao foi inicializada, entao tomei
a liberdade de deduzir que foi um erro e incializa-la

int *x1;
int x2;
int *x3;
x1 = (int*)malloc(sizeof(int));
|----------------------------|
|           Memoria          |
|----------------------------|
| endereco | nome | conteudo |
|----------|------|----------|
|   A5A0   | *x1  |   FCD8   |
|----------|------|----------|
|   A4F0   | *x3  |   FCC8   |
|----------|------|----------|
|   FCD4   |  x2  |    00    |
|----------|------|----------|
|   FCC8   |      |   lixo   |
|----------|------|----------|
|   FCD8   |      |   lixo   |
|----------------------------|

printf("\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)", x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
|------------------------TELA-------------------------|
|x1(A5A0)(lixo)(FCD8) x2(0)(FCD4) x3(lixo)(lixo)(FCC8)|
|-----------------------------------------------------|

*x1 = 20;
|----------------------------|
|           Memoria          |
|----------------------------|
| endereco | nome | conteudo |
|----------|------|----------|
|   A5A0   | *x1  |   FCD8   |
|----------|------|----------|
|   A4F0   | *x3  |   FCC8   |
|----------|------|----------|
|   FCD4   |  x2  |    00    |
|----------|------|----------|
|   FCC8   |      |   lixo   |
|----------|------|----------|
|   FCD8   |      |    20    |
|----------------------------|

printf("\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)", x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
|------------------------TELA-------------------------|
| x1(A5A0)(20)(FCD8) x2(0)(FCD4) x3(lixo)(lixo)(FCC8) |
|-----------------------------------------------------|

x2 = *x1;
|----------------------------|
|           Memoria          |
|----------------------------|
| endereco | nome | conteudo |
|----------|------|----------|
|   A5A0   | *x1  |   FCD8   |
|----------|------|----------|
|   A4F0   | *x3  |   FCC8   |
|----------|------|----------|
|   FCD4   |  x2  |    20    |
|----------|------|----------|
|   FCC8   |      |   lixo   |
|----------|------|----------|
|   FCD8   |      |    20    |
|----------------------------|

printf("\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)", x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
|------------------------TELA--------------------------|
| x1(A5A0)(20)(FCD8) x2(20)(FCD4) x3(lixo)(lixo)(FCC8) |
|------------------------------------------------------|

*x3 = x2 * *x1;  // o conteudo de x2 multiplicado pelo conteudo do ponteiro de x1
|----------------------------|
|           Memoria          |
|----------------------------|
| endereco | nome | conteudo |
|----------|------|----------|
|   A5A0   | *x1  |   FCD8   |
|----------|------|----------|
|   A4F0   | *x3  |   FCC8   |
|----------|------|----------|
|   FCD4   |  x2  |    20    |
|----------|------|----------|
|   FCC8   |      |   0400   |
|----------|------|----------|
|   FCD8   |      |    20    |
|----------------------------|

printf("\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)", x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
|------------------------TELA-------------------------|
| x1(A5A0)(20)(FCD8) x2(20)(FCD4) x3(lixo)(400)(FCC8) |
|-----------------------------------------------------|

x3 = &x2;
|----------------------------|
|           Memoria          |
|----------------------------|
| endereco | nome | conteudo |
|----------|------|----------|
|   A5A0   | *x1  |   FCD8   |
|----------|------|----------|
|   A4F0   | *x3  |   FCD4   |
|----------|------|----------|
|   FCD4   |  x2  |    20    |
|----------|------|----------|
|   FCC8   |      |   0400   |
|----------|------|----------|
|   FCD8   |      |    20    |
|----------------------------|

printf("\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)", x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
|------------------------TELA------------------------|
| x1(A5A0)(20)(FCD8) x2(20)(FCD4) x3(lixo)(20)(FCC8) |
|----------------------------------------------------|

x2 = 15;
|----------------------------|
|           Memoria          |
|----------------------------|
| endereco | nome | conteudo |
|----------|------|----------|
|   A5A0   | *x1  |   FCD8   |
|----------|------|----------|
|   A4F0   | *x3  |   FCD4   |
|----------|------|----------|
|   FCD4   |  x2  |    15    |
|----------|------|----------|
|   FCC8   |      |   0400   |
|----------|------|----------|
|   FCD8   |      |    20    |
|----------------------------|

printf("\nx1(%p)(%i)(%p) x2(%i)(%p) x3(%p)(%i)(%p)", x1, *x1, &x1, x2, &x2, x3, *x3, &x3);
|------------------------TELA------------------------|
| x1(A5A0)(20)(FCD8) x2(15)(FCD4) x3(lixo)(15)(FCC8) |
|----------------------------------------------------|
